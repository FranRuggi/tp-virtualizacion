#!/bin/bash

DIR=""
ARCHIVO=""
AYUDA=0
PANTALLA=0

# --- Funciones simples ---

abspath_dir() {
  # Resuelve .. de un DIRECTORIO existente
  local d="$1"
  case "$d" in
    /*|~*) printf '%s\n' "$d" ;;
    *)     ( cd "$d" 2>/dev/null && pwd ) || return 1 ;;
  esac
}

abspath_file() {
  # Convierte RUTA DE ARCHIVO (que puede no existir) a absoluta
  # resolviendo el directorio padre
  local f="$1"
  local dir base
  dir=$(dirname -- "$f")
  base=$(basename -- "$f")
  dir=$(abspath_dir "$dir") || return 1
  printf '%s/%s\n' "$dir" "$base"
}


# ------------------ Carga de opciones ------------------
options=$(getopt -o d:a:ph -l help,directorio:,archivo:,pantalla -- "$@" 2> /dev/null)

eval set -- "$options"

# ------------------ Asignamos valores a las variables ------------------

while true; do
  case "$1" in
    -d|--directorio)
      DIR="$(abspath_dir "$2")" || { echo "Error: directorio inválido"; exit 1; }
      shift 2 ;;
    -a|--archivo)
      ARCHIVO="$(abspath_file "$2")" || { echo "Error: ruta de archivo inválida"; exit 1; }
      shift 2 ;;
    -p|--pantalla)
      PANTALLA=1; shift ;;
    -h|--help)
      AYUDA=1; shift ;;
    --)
      shift; break ;;
    *)
      break ;;
  esac  
done


# ------------------ Validaciones ------------------
# Mostramos la Ayuda

if [[ "$AYUDA" -eq 1 ]]; then
  echo "Este programa tiene por objetivo analizar los resultados de encuestas de satisfaccion de clientes"
  echo "de un servicio de atención al cliente. Relevará los datos en el directorio enviado e imprimira (en un archivo o por pantalla)"
  echo "los promedios de tiempo de respuesta y satisfaccion del cleinte por fecha y por canal"
  echo ""
  echo "La llamada al script sera de la siguiente manera: $0 -d | --directorio <directorio> [-a | -archivo <archivo> | -p]"
  echo "  -d  directorio de entrada (obligatorio)"
  echo "  -a  archivo de salida (excluyente con -p)"
  echo "  -p  mostrar salida por pantalla (excluyente con -a)"
  echo "  -h  mostrar esta ayuda"
  exit 0
fi

# Directorio obligatorio y existente
if [ -z "$DIR" ] || [ ! -d "$DIR" ]; then
  echo "Error: Falta el directorio o no existe."
  exit 1
fi

# Exclusión -a y -p
if [ -n "$ARCHIVO" ] && [ "$PANTALLA" -eq 1 ]; then
  echo "Error: no se puede usar -a y -p juntos" >&2
  exit 1
fi

# Si no dieron ni -a ni -p → pedimos archivo
if [ -z "$ARCHIVO" ] && [ "$PANTALLA" -eq 0 ]; then
  read -p "Ingrese ruta del archivo de salida: " ARCHIVO
  ARCHIVO="$(abspath_file "$ARCHIVO")" || { echo "Error: ruta inválida"; exit 1; }
fi

# Validaciones de archivo SOLO si hay archivo
if [ -n "$ARCHIVO" ]; then
  if [ -e "$ARCHIVO" ]; then
    echo "Error: el archivo $ARCHIVO ya existe" >&2
    exit 1
  fi
  DEST_DIR=$(dirname -- "$ARCHIVO")
  if [ ! -d "$DEST_DIR" ]; then
    echo "Error: el directorio destino '$DEST_DIR' no existe." >&2
    exit 1
  fi
  if [ ! -w "$DEST_DIR" ]; then
    echo "Error: no hay permisos de escritura en '$DEST_DIR'." >&2
    exit 1
  fi
fi



echo $DIR $ARCHIVO $PANTALLA $AYUDA